[{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Analyzing risk index using cropland connectivity","text":"network connectivity cropland can used analyse potential spread plant pathogen. network plays crucial role, several factors affects spread thus connectivity. Although croplands may geographically connected, risk generalized pathogen may spread ’s exclusive specific crop. geohabnet supports 10 parameters potential impact risk connectivity among croplands. implementation expanded upon (Xing et al. 2020), discusses global cropland connectivity. framework uses default values paper time making parameters eventually turning framework analysis crops. Although article focused usage, useful know interested developers package design inspired widely used Configuration-based design software development (Majors 2022), (Nash DeMore 2009), (Allaire 2023) provides text based interface control parameters values risk analysis context. Primary objective vignette help user getting started, list capabilities intuition behind . also describes underlying implementation high level support intuition behind functions. Throughout article, citing external sites resources relevant usage package.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"definitions","dir":"Articles","previous_headings":"Abstract > Pre-requisites","what":"Definitions","title":"Analyzing risk index using cropland connectivity","text":"Raster - Raster digital encoding 2D digital image underlying pixels underlying. also encapsulates details like resolution, dimensions etc useful identification processing. , use raster represent maps. TIFF(Tag Image File Format) file stores raster information.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"external-materials","dir":"Articles","previous_headings":"Abstract > Pre-requisites","what":"External materials","title":"Analyzing risk index using cropland connectivity","text":"Download install R, R Studio - https://rstudio-education.github.io/hopr/starting.html/ Rasters - https://www.adobe.com/creativecloud/file-types/image/raster.html TIFF - https://www.adobe.com/creativecloud/file-types/image/raster/tiff-file.html/","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"datasets","dir":"Articles","previous_headings":"Abstract","what":"Datasets","title":"Analyzing risk index using cropland connectivity","text":"use publicly available sources obtain crop information - Monfreda (Monfreda, Ramankutty, Foley 2008) MapSpam (2005) (International Food Policy Research Institute 2019) Geodata provides set APIs access datasets. visualization plots, use rnaturalearth.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"meta-information","dir":"Articles","previous_headings":"Abstract > Quick Start","what":"Meta information","title":"Analyzing risk index using cropland connectivity","text":"Package information - https://garrettlab.github.io/CroplandConnectivity/ Source code - https://github.com/GarrettLab/CroplandConnectivity/tree/main/geohabnet/ Report issues - https://github.com/GarrettLab/CroplandConnectivity/issues/ Lab website - https://www.garrettlab.com/","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"installation-and-loading","dir":"Articles","previous_headings":"Abstract > Quick Start","what":"Installation and loading","title":"Analyzing risk index using cropland connectivity","text":"Installing geohabnet also install dependencies. Please see list dependencies using desc::desc(package = \"geohabnet\") point, access help page using following -","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") } library(\"devtools\")  if (!require(\"geohabnet\")) {   install_github(\"GarrettLab/CroplandConnectivity\", subdir = \"geohabnet\") } library(geohabnet) ?geohabnet # and ?geohabnet::sean # any function"},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"run-analysis-on-default-configuration","dir":"Articles","previous_headings":"Abstract > Quick Start","what":"Run analysis on default configuration","title":"Analyzing risk index using cropland connectivity","text":"run analysis default set values supported parameters. Initially, values set based Xing et al(2021) (Xing et al. 2020) crop Avocado. run workflow global geographical extent quickly since crop presence relatively low.    results based values set parameters see details next section.","code":"sensitivity_analysis() #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====== #> [1] TRUE"},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"running-new-analysis","dir":"Articles","previous_headings":"Abstract","what":"Running new analysis","title":"Analyzing risk index using cropland connectivity","text":"provide 2 methods entry points run analysis setting new values supported parameters.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"setting-values-in-a-function","dir":"Articles","previous_headings":"Abstract > Running new analysis","what":"Setting values in a function","title":"Analyzing risk index using cropland connectivity","text":"goal function provide simple invasive factors parameters. internal implementation program deals object terra (Hijmans 2023) igraph(Csardi Nepusz 2006) . primary object type SpatRaster terra . get started, use quick way obtain raster later understand details.  Now raster object, can fed directly workflow. set required parameter - rast. value represents Avocado plantation geographical area North America.    results interpreted accordance values parameters factored arguments sean. Run ?sean see supported parameters. later see usage parameters well. rast - spatRaster. Represents map crop presence geographical area. geoscale - Vector. Geographical coordinates form c(Xmin, Xmax, Ymin, Ymax) global - Logical. set TRUE, geoscale ignored. Get geographical scales used global analysis - Although recommended change global scales since finalized several tries. Still, advance use, set global geographic scales using -","code":"avocado <- cropharvest_rast(\"avocado\", \"monfreda\")  # verify the raster object avocado #> class       : SpatRaster  #> dimensions  : 2160, 4320, 1  (nrow, ncol, nlyr) #> resolution  : 0.08333333, 0.08333333  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : avocado_HarvestedAreaFraction.tif  #> name        : avocado_HarvestedAreaFraction terra::plot(avocado) risk_indexes <- sean(avocado) #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== global_scales() #> $east #> [1] -24 180 -58  60 #>  #> $west #> [1] -140  -34  -58   60 #set_global_scales(list(east = c(-24, 180, -58, 60), west = c(-140, -34, -58, 60)))"},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"using-configuration","dir":"Articles","previous_headings":"Abstract > Running new analysis","what":"Using configuration","title":"Analyzing risk index using cropland connectivity","text":"parameters available configuration thus control analysis. configuration file name parameters.yaml, currently supporting 10 parameters. intuition behind methodology provide basic interface setting new values. snippet describes basic usage configuration. Get initial configuration file. default function save file temporary directory tempdir(), however recommend saving path program write permissions. Using iwindow = TRUE prompt selection window save config file. file look something like - Initial parameters.yaml values must modified without modifying structure. order don’t matter program. new values configuration must fed workflow using - get_parameters() fetch initial parameters. can, required re-fetch. Modify value feed workflow using set_parameters().","code":"config_file <- get_parameters(out_path = tempdir()) #> [1] \"parameters fetched successfully\" config_file #> [1] \"/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//RtmpD4iEgD/parameters.yaml\" set_parameters(new_params = config_file) #> [1] TRUE #using iwindow = true will prompt a selction window to choose config file."},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"hosts","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Hosts","title":"Analyzing risk index using cropland connectivity","text":"helper functions make analysis easier. Available sources can seen using - specifically, support 2 data set sources - Monfreda Mapspam using APIs provided Geodata. sources crop presence geographical areas form raster(tiff). start , can check certain crop available source - #1 result suggests crop information available monfreda . Now, #2 suggests banana present 2 sources. use results obtain raster data one specified sources. returned actually type SpatRaster. , seperate raster information crop. Crops can combined returned one raster. case banana, information sources first combined using mean crop information .e. banana avocado combined one raster. done produce single map contains information requested crops. one method obtain raster, using tiff - tiff_torast() . Finally, get_rasters() method, abstraction . see difference data generated last 3 methods - result obtained one methods can used argument sean() . Value results list risk indices. far, now run sensitivity analysis workflow avocado banana global scale default set parameter values. Alternatively, can just specify crops parameters.yaml run workflow -","code":"geohabnet::get_supported_sources() #> [1] \"monfreda\" \"mapspam\" search_crop(\"avocado\") #1 #> [1] \"monfreda\" search_crop(\"banana\") #2 #> [1] \"monfreda\" \"spam\" # get avocado data rast_avocado <- crops_rast(list(monfreda = \"avocado\"))  #get data of banana crop rast_ban <- crops_rast(list(mapspam = \"banana\")) rast_avo_ban <- crops_rast(list(monfreda = c(\"avocado\", \"banana\"), mapspam = c(\"banana\"))) results <- lapply(list(rast_avocado, rast_ban, rast_avo_ban), terra::rast) results <- lapply(list(rast_avocado, rast_ban, rast_avo_ban), sean) results <- sensitivity_analysis() #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====="},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"thresholds","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Thresholds","title":"Analyzing risk index using cropland connectivity","text":"Thresholds used select subset values SpatRaster operations applied. directly effects connectivity gives sense sensitivity network. intermediate goal produce adjacency graph essentially determines connectivity. Cells doesn’t meet threshold removed consideration dispersal models.","code":"risk_indexes <- sean(avocado, host_density_threshold = 0.00001, link_threshold = 0.00001) #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====="},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"density-thresholds","dir":"Articles","previous_headings":"Abstract > Parameters > Thresholds","what":"Density Thresholds","title":"Analyzing risk index using cropland connectivity","text":"host density threshold. host density threshold minimum cropland proportion grid cells (locations) included analysis. parameter called HostDensityThreshold supports list values 0 1. running sensitivity_analysis() function, check values host density threshold smaller maximum host density map prevent errors. values rounded 5 decimal points.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"link-thresholds","dir":"Articles","previous_headings":"Abstract > Parameters > Thresholds","what":"Link Thresholds","title":"Analyzing risk index using cropland connectivity","text":"Based information host distribution dispersal kernels, adjacency matrices created, entries likelihood pathogen movement locations. , adjacency matrices converted graph objects perform network analysis, entries adjacency matrices now weight links network. Choosing link weight thresholds helps focus analysis likely pathogen dispersal landscape. Like host density threshold, can provide list positive values LinkThreshold. running sensitivity_analysis() function, check values link weight threshold smaller maximum link weight network prevent errors.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"aggregation","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Aggregation","title":"Analyzing risk index using cropland connectivity","text":"Aggregation strategy refers function used create new map host density lower resolution (larger cells). Reducing spatial resolution helps reduce computational power needed run analysis. AggregationStrategy: [sum], sum cropland proportion initially small grids within large grid divided total number initially small grids within large grid. AggregationStrategy: [mean], sum cropland proportion initially small grids within large grid divided total number initially small grids containing land (small grids water excluded) within large grid. default, analysis run can opted one. one method used, difference map skipped outcome.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"distance-methods","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Distance methods","title":"Analyzing risk index using cropland connectivity","text":"pair locations host map values greater host density threshold, sensitivity_analysis() function calculate physical distances use calculate relative likelihood pathogen movement locations based pairwise geographical proximity. two different options calculate distance locations. · Vincenty ellipsoid distance option highly accurate computationally expensive. · Geodesic distance option less computationally expensive less accurate option . can set distance option either DistanceStrategy: “vincentyEllipsoid” DistanceStrategy: “geodesic”. One options used input run analysis. Check supported methods analysis running dist_methods() console.","code":"dist_methods() #> [1] \"geodesic\"          \"vincentyellipsoid\""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"resolution","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Resolution","title":"Analyzing risk index using cropland connectivity","text":"aggregation factor granularity number small grid cells aggregated larger grid cells direction (horizontally vertically). finest value 1 can require analysis run hours large number cells SpatRaster . resolution also used calculation variance dis-aggregating risk indices coarser resolution producing maps. provided, defaulted value selected reso()","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"metrics","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Metrics","title":"Analyzing risk index using cropland connectivity","text":"See available metrics using Metrics corresponding dispersal models applied distance matrix specified weights. weights must specified % sum weights equal 100. use functions (Csardi Nepusz 2006) calculate metrics dispersal model. 2 dispersal models applied parameters inverse power law negative exponential. formally, metrics way determine connectivity among nodes network.","code":"supported_metrics() #> [1] \"betweeness\"               \"node_strength\"            #> [3] \"sum_of_nearest_neighbors\" \"eigenvector_centrality\"   #> [5] \"closeness\"                \"degree\"                   #> [7] \"page_rank\""},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"geographical-extent","dir":"Articles","previous_headings":"Abstract > Parameters","what":"Geographical Extent","title":"Analyzing risk index using cropland connectivity","text":"Geographical extent subset world map defined coordinate reference system. corresponding parameter set area sean() sensitivity_analyis() geoscale GeoExtent respectively. Default setting global = TRUE ignore value geoscale. consider take world map account using values global_scales() . Using function  Using config Set Global = FALSE CustomExt = [-115, -75, 5, 32] . initial parameters.yaml already contains value run combination parameters. provided geoscale, program take subset provided raster (dataset crop). workflow apply graph operations network connectivity subset.","code":"results <- sean(avocado, global = FALSE, geoscale = c(-115, -75, 5, 32))"},{"path":"https://garrettlab.github.io/CroplandConnectivity/articles/analysis.html","id":"outputs","dir":"Articles","previous_headings":"Abstract","what":"Outputs","title":"Analyzing risk index using cropland connectivity","text":"default, 3 maps produced analysis. sean() also returns list risk indexes fed connectivity() . flexibility supposed allow users use risk indexes purposes use function produce maps different parameters. code , obtaining results, maps produced. order produce calculate variance, cells SpatRaster extended coarser value using res parameter. Setting maps = FALSE suppress calculation outputs.       equivalent sensitivity_analysis() . final operations performed risk indices 3 results produced - Mean Simply mean SpatRasters resulting combination parameter values. values cells added across indices divided number indices. Variance Uses stats::var risk indices, subset extracted provided scale finally pixels dis-aggregated using factor = resolution value original parameter previous step. Difference aggregation methods (sum mean) selected, difference calculated rank matrices essentially numeric cells risk indices type SpatRaster. result dis-aggregated way previous step. Set pmean, pvar, pdiff FALSE skip calculation connectivity() skip calculation. sean() sensitivity_analysis(), set map = FALSE skip generation maps outcome. case global analysis, result eastern western geographic extents merged using terra::merge() . outcome operation saved new directory plots specified path OutDir name opt_datetime.tif, opt one suffixed datetime file created. outdir empty, value defaulted tempdir() . applies correponding parameter outdir functions.","code":"risk_indexes <- sean(avocado) #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== connectivity(risk_indexes) #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ===== #>  |---------|---------|---------|---------| ===                                             |---------|---------|---------|---------| ====="},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Krishna Keshav. Author, maintainer. Garrett Lab. Author.            https://garrettlab.com Karen Garrett. Author. Aaron Plex. Author. University Florida. Copyright holder, funder.            https://www.ufl.edu","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keshav K, Lab G, Garrett K, Plex (2023). geohabnet: Analysis Cropland Connectivity. https://garrettlab.github.io/CroplandConnectivity/, https://github.com/GarrettLab/CroplandConnectivity/tree/main/geohabnet/, https://www.garrettlab.com/.","code":"@Manual{,   title = {geohabnet: Analysis of Cropland Connectivity},   author = {Krishna Keshav and Garrett Lab and Karen Garrett and Aaron Plex},   year = {2023},   note = {https://garrettlab.github.io/CroplandConnectivity/, https://github.com/GarrettLab/CroplandConnectivity/tree/main/geohabnet/, https://www.garrettlab.com/}, }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/index.html","id":"geohabnet","dir":"","previous_headings":"","what":"Analysis of Cropland Connectivity","title":"Analysis of Cropland Connectivity","text":"package expanded upon Xing et al (2021). add capabilities customize parameter values using functions see results cropland connectivity risk index form plots. goal geohabnet enable users visualize cropland connectivity risk index using parameter values. risk analysis includes 3 maps - Mean cropland connectivity Difference Variance Package currently support crops sourced geodata::monfredaCrops() geodata::spamCrops(). analysis produces 3 maps - mean, variance difference crop risk index. multiple ways functions can used - generate final outcome intermediate outcomes sophisticated use cases. Refer vignettes. values propagated functions performing operations distance matrix calculation. values set parameters.yaml can accessed using get_parameters(). See usage .","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of Cropland Connectivity","text":"source version package can installed GitHub :","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") } #> Loading required package: devtools #> Loading required package: usethis  devtools::install_github(\"GarrettLab/CroplandConnectivity\", subdir = \"geohabnet\") #> Downloading GitHub repo GarrettLab/CroplandConnectivity@HEAD #>  #> ── R CMD build ───────────────────────────────────────────────────────────────── #> * checking for file ‘/private/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T/Rtmp5Du3oI/remotes142c87b1a1d86/GarrettLab-CroplandConnectivity-f1e22a1/geohabnet/DESCRIPTION’ ... OK #> * preparing ‘geohabnet’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> Removed empty directory ‘geohabnet/vignettes’ #> * building ‘geohabnet_1.0.0.tar.gz’ #> Installing package into '/private/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T/RtmpU8nDB5/temp_libpath12bd83bd84ecb' #> (as 'lib' is unspecified)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/index.html","id":"geohabnet-example","dir":"","previous_headings":"","what":"geohabnet Example","title":"Analysis of Cropland Connectivity","text":"Run analysis using - parameters.yaml stores parameter values. can accessed set using get_parameters() set_parameters() respectively. default risk analysis run global index, scales present global_scales() . Refer help using ?geohabnet::fun help(geohabnet::fun) Refer article Analyzing risk index using cropland connectivity elaborate description usages functions package.","code":"library(geohabnet)  param_file <- geohabnet::get_parameters() #> [1] \"parameters fetched successfully\" # now edit the file geohabnet::set_parameters(new_params = param_file) #> [1] TRUE geohabnet::senstivity_analysis()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_BETWEENNESS.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_BETWEENNESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"","code":"STR_BETWEENNESS"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_BETWEENNESS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"","code":"STR_CLOSENESS_CENTRALITY"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_DEGREE.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_DEGREE","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_DEGREE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"","code":"STR_DEGREE"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_DEGREE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EAST.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_EAST","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"","code":"STR_EAST"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EAST.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"","code":"STR_EIGEN_VECTOR_CENTRALITY"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"","code":"STR_NEAREST_NEIGHBORS_SUM"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NODE_STRENGTH.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NODE_STRENGTH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"","code":"STR_NODE_STRENGTH"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_NODE_STRENGTH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_PAGE_RANK.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_PAGE_RANK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"","code":"STR_PAGE_RANK"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_PAGE_RANK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_WEST.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_WEST","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_WEST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"","code":"STR_WEST"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/STR_WEST.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate difference map — ccri_diff","title":"Calculate difference map — ccri_diff","text":"function produces map difference b/w mean sum indexes rank cropland harvested area fraction.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate difference map — ccri_diff","text":"","code":"ccri_diff(rast, x, y, global, geoscale, res = reso(), outdir = tempdir())"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate difference map — ccri_diff","text":"rast raster object mean index raster difference x raster object cropland harvest y raster object cropland harvest global logical. TRUE global analysis required, FALSE otherwise. TRUE, geoscale ignored. Default TRUE. geoscale vector. geographical scale res numeric. map resolution. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean of raster objects — ccri_mean","title":"Calculate mean of raster objects — ccri_mean","text":"Wrapper terra::mean(). Calculates mean list rasters.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean of raster objects — ccri_mean","text":"","code":"ccri_mean(   indexes,   global = TRUE,   geoscale = NULL,   plt = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean of raster objects — ccri_mean","text":"indexes list rasters. See details. global logical. TRUE global analysis required, FALSE otherwise. TRUE, geoscale ignored. Default TRUE. geoscale vector. geographical scale plt TRUE need plot mean map, FALSE otherwise geoscale. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate variance of CCRI — ccri_variance","title":"Calculate variance of CCRI — ccri_variance","text":"function produces map variance CCRI based input parameters","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate variance of CCRI — ccri_variance","text":"","code":"ccri_variance(   indexes,   rast,   global,   geoscale,   res = reso(),   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/ccri_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate variance of CCRI — ccri_variance","text":"indexes list rasters. See details. rast raster object. used calculating variance. global logical. TRUE global analysis required, FALSE otherwise. TRUE, geoscale ignored. Default TRUE. geoscale vector. geographical scale res numeric. map resolution. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/connectivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and plot maps — connectivity","title":"Calculate and plot maps — connectivity","text":"Calculate mean, variance difference. result produced form maps plotted predefined settings. Currently, settings plot customized. Default value TRUE logical arguments","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/connectivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and plot maps — connectivity","text":"","code":"connectivity(   indexes,   global = TRUE,   geoscale,   res = reso(),   pmean = TRUE,   pvar = TRUE,   pdiff = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/connectivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and plot maps — connectivity","text":"indexes list rasters. See details. global logical. TRUE global analysis required, FALSE otherwise. TRUE, geoscale ignored. Default TRUE. geoscale vector. geographical scale res numeric. map resolution. pmean TRUE map mean plotted, FALSE otherwise. pvar TRUE variance map plotted, FALSE otherwise. pdiff TRUE difference map plotted, FALSE otherwise. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/connectivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and plot maps — connectivity","text":"indexes actually risk resulting operations crop's raster parameters provided either parameters.yaml sean(). save opted plots using - pmean, pvar pdiff. File saved provided value outdir  tempdir().interactive() TRUE, plots can seen active plot window. E.g. Rstudio","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/connectivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate and plot maps — connectivity","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland Connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, \\@urlhttps://CRAN.R-project.org/package=terra","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/cropharvest_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster object for crop — cropharvest_rast","title":"Get raster object for crop — cropharvest_rast","text":"Get cropland information form raster object data source crop","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/cropharvest_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster object for crop — cropharvest_rast","text":"","code":"cropharvest_rast(crop_name, data_source)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/cropharvest_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raster object for crop — cropharvest_rast","text":"crop_name Name crop data_source Data source cropland information","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/cropharvest_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raster object for crop — cropharvest_rast","text":"Raster object","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/cropharvest_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raster object for crop — cropharvest_rast","text":"","code":"if (FALSE) { cropharvest_rast(\"avocado\", \"monfreda\") }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/crops_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sum of rasters for individual crops — crops_rast","title":"Get sum of rasters for individual crops — crops_rast","text":"Takes crop names returns raster object sum raster individual crops. Currently, supports crops listed geodata::monfredaCrops(), geodata::spamCrops() crop present multiple sources, mean calculated.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/crops_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sum of rasters for individual crops — crops_rast","text":"","code":"crops_rast(crop_names)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/crops_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sum of rasters for individual crops — crops_rast","text":"crop_names named list source along crop names","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/crops_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sum of rasters for individual crops — crops_rast","text":"SpatRaster. Raster object sum individual crop rasters","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/crops_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sum of rasters for individual crops — crops_rast","text":"","code":"if (FALSE) { crops_rast(list(monfreda = c(\"wheat\", \"barley\"), mapspam = c(\"wheat\", \"potato\"))) }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/dist_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance methods supported — dist_methods","title":"Distance methods supported — dist_methods","text":"Contains supported strategies calculate distance two points. Use one methods sean() sensitivity_analysis().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/dist_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance methods supported — dist_methods","text":"","code":"dist_methods()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/dist_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance methods supported — dist_methods","text":"vector","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/dist_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance methods supported — dist_methods","text":"","code":"dist_methods()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/geohabnet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geohabnet: Analysis of Cropland Connectivity — geohabnet-package","title":"geohabnet: Analysis of Cropland Connectivity — geohabnet-package","text":"Geographical spatial analysis cropland connectivity. Allows users visualize risk index plots given set crops. functions developed extension analysis Xing et al (2021) doi:10.1093/biosci/biaa067 . primary function sean() indicative sensitive analysis parameters using kernel models. Package currently supports crops sourced Monfreda, C., N. Ramankutty, J. . Foley (2008) doi:10.1029/2007gb002947  \"Farming planet: 2. Geographic distribution crop areas, yields, physiological types, net primary production year 2000, Global Biogeochem. Cycles, 22, GB1022\" International Food Policy Research Institute (2019) doi: 10.7910/DVN/PRFF8V  \"Global Spatially-Disaggregated Crop Production Statistics Data 2010 Version 2.0, Harvard Dataverse, V4\". analysis produces 3 maps - mean, variance, difference crop risk index. applies distance functions graph operations network calculate risk index. multiple ways functions can used - generate final outcome intermediate outcomes sophisticated use cases. Refer vignettes. sean() set global variables can accessed using $ prefix. values propagated functions performing operations distance matrix calculation. 'parameters.yaml' stores parameters values can accessed using get_parameters(). Refer usage. objective package support risk analysis using cropland connectivity 10 parameters - host crops, density threshold, aggregation distance method, resolution, geographic extent, link threshold, kernel models, network metrics maps. parameters serves input used different phases analysis workflow.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/geohabnet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geohabnet: Analysis of Cropland Connectivity — geohabnet-package","text":"Maintainer: Krishna Keshav kkeshav@ufl.edu Authors: Garrett Lab karengarrett@ufl.edu (https://garrettlab.com) Karen Garrett karengarrett@ufl.edu (ORCID) Aaron Plex plexaaron@ufl.edu (ORCID) contributors: University Florida (https://www.ufl.edu) [copyright holder, funder]","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/geoscale_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geographical scales from the parameters — geoscale_param","title":"Get geographical scales from the parameters — geoscale_param","text":"function returns list geographical scales set global custom extent parameters.yaml. global TRUE, CustomExt ignored.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/geoscale_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geographical scales from the parameters — geoscale_param","text":"","code":"geoscale_param()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/geoscale_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geographical scales from the parameters — geoscale_param","text":"list geographical scales","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_param_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metrics from parameters — get_param_metrics","title":"Get metrics from parameters — get_param_metrics","text":"Get metrics parameters stored parameters.yaml.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_param_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metrics from parameters — get_param_metrics","text":"","code":"get_param_metrics(params = load_parameters())"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_param_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metrics from parameters — get_param_metrics","text":"params R object load_parameters(). Default load_parameters().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_param_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metrics from parameters — get_param_metrics","text":"List metrics - parameters values. See usage.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_param_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metrics from parameters — get_param_metrics","text":"","code":"# Get metrics from parameters get_param_metrics() get_param_metrics(load_parameters())"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameters — get_parameters","title":"Get Parameters — get_parameters","text":"Retrieves parameters copies parameter file specified output path.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameters — get_parameters","text":"","code":"get_parameters(out_path = tempdir(), iwindow = FALSE)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameters — get_parameters","text":"out_path character. output path parameter file copied. Default temporary directory tempdir() iwindow logical. TRUE, prompts user select output directory using file chooser window. Default FALSE","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameters — get_parameters","text":"character. path copied parameter file.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameters — get_parameters","text":"Using configuration file alternative sean()","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameters — get_parameters","text":"","code":"get_parameters() get_parameters(out = tempdir())"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_rasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rasters object from parameters — get_rasters","title":"Get rasters object from parameters — get_rasters","text":"Takes named list hosts input. See host object get_parameters() load_parameters(). also wrapper crops_rast(). Function creates 2 raster object - one sum crops specified sources using provided raster file. See tiff_torast()","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_rasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rasters object from parameters — get_rasters","text":"","code":"get_rasters(hosts)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_rasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rasters object from parameters — get_rasters","text":"hosts List hosts values. synonym Hosts object parameters","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_rasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get rasters object from parameters — get_rasters","text":"List SpatRaster.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_rasters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get rasters object from parameters — get_rasters","text":"","code":"# Get default rasters if (FALSE) { get_rasters(list(mapspam = c(\"wheat\"), monfreda = c(\"avocado\"), file = \"some_raster.tif\")) }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_supported_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get supported sources of crops — get_supported_sources","title":"Get supported sources of crops — get_supported_sources","text":"provided, cropharvest_rast() look cropland data specific source.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_supported_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get supported sources of crops — get_supported_sources","text":"","code":"get_supported_sources()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_supported_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get supported sources of crops — get_supported_sources","text":"return vector supported sources. Also used lookup find get raster object.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/get_supported_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get supported sources of crops — get_supported_sources","text":"","code":"# Get currently supported sources get_supported_sources()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/global_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Global geographical extent — global_scales","title":"Global geographical extent — global_scales","text":"See geographical extents used global analysis. Returns eastern western hemisphere extents. extent form c(Xmin, Xmax, Ymin, Ymax).","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/global_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global geographical extent — global_scales","text":"","code":"global_scales()"},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/load_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Parameters from YAML File — load_parameters","title":"Load Parameters from YAML File — load_parameters","text":"function loads parameters YAML file stores object.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/load_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Parameters from YAML File — load_parameters","text":"","code":"load_parameters(filepath = .get_helper_filepath(.kparameters_file_type))"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/load_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Parameters from YAML File — load_parameters","text":"filepath Path YAML file containing parameters. default, takes value \".kparameters_file_type\" set \"parameters.yaml\".","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/load_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Parameters from YAML File — load_parameters","text":"object parameters values","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/load_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Parameters from YAML File — load_parameters","text":"","code":"# Load parameters from default file load_parameters()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/metric_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"list stores functions to apply metrics to distance matrix — metric_funs","title":"list stores functions to apply metrics to distance matrix — metric_funs","text":"list stores functions apply metrics distance matrix","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/metric_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list stores functions to apply metrics to distance matrix — metric_funs","text":"","code":"metric_funs"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/metric_funs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"list stores functions to apply metrics to distance matrix — metric_funs","text":"object class list length 7.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/model_powerlaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate risk index using inbuilt models. — model_powerlaw","title":"Calculate risk index using inbuilt models. — model_powerlaw","text":"model_powerlaw() calculates risk index using power law. model_neg_exp() calculates risk index using negative exponential.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/model_powerlaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate risk index using inbuilt models. — model_powerlaw","text":"","code":"model_powerlaw(   beta,   link_threshold,   distance_matrix = the$distance_matrix,   thresholded_crop_values,   adj_mat = NULL,   crop_raster,   crop_cells_above_threshold,   metrics = the$parameters_config$`CCRI parameters`$NetworkMetrics$InversePowerLaw )  model_neg_exp(   gamma_val,   link_threshold,   distance_matrix = the$distance_matrix,   thresholded_crop_values,   adj_mat = NULL,   crop_raster,   crop_cells_above_threshold,   metrics = the$parameters_config$`CCRI parameters`$NetworkMetrics$InversePowerLaw )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/model_powerlaw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate risk index using inbuilt models. — model_powerlaw","text":"beta list beta values. DispersalParameterBeta parameters.yaml. link_threshold threshold value link. distance_matrix distance matrix, generated sean(). thresholded_crop_values crop values threshold. adj_mat Adjacency matrix(optional) representing un-directed graph network. provided, gamma_val, distance_matrix, link_threshold thresholded_crop_values ignored. ignored parameters used generate adjacency matrix internally. way use custom adjacency matrix. crop_raster raster object cropland harvest. crop_cells_above_threshold crop cells threshold. contains cells values. metrics list 2 vectors - metrics weights. gamma_val list beta values. DispersalParameterGamma parameters.yaml.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/model_powerlaw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate risk index using inbuilt models. — model_powerlaw","text":"risk index","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/model_powerlaw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate risk index using inbuilt models. — model_powerlaw","text":"Network metrics passed list vectors e.g. list(metrics = c(\"betweeness\"), weights = c(100)). Default values fetched parameters.yaml arguments uses structure.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/nn_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation on network matrix. — nn_sum","title":"Calculation on network matrix. — nn_sum","text":"basically abstraction functions igraph package. functions included abstraction : nn_sum(): Calculates sum nearest neighbors igraph::graph.knn(). node_strength(): Calculates sum edge weights adjacent nodes igraph::graph.strength(). betweeness(): Calculates vertex edge betweenness based number geodesics igraph::betweenness(). ev(): Calculates eigenvector centrality positions within network igraph::evcent(). closeness(): measures many steps required access every vertex given vertex igraph::closeness(). degree(): number adjacent edges igraph::degree(). pagerank(): page rank score vertices igraph::page_rank().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/nn_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation on network matrix. — nn_sum","text":"","code":"nn_sum(crop_dm, we)  node_strength(crop_dm, we)  betweeness(crop_dm, we)  ev(crop_dm, we)  degree(crop_dm, we)  closeness(crop_dm, we)  pagerank(crop_dm, we)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/nn_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation on network matrix. — nn_sum","text":"crop_dm Distance matrix. internal workflow, distance matrix comes result operations within sean() risk functions. Weight percentage.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/nn_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation on network matrix. — nn_sum","text":"Matrix mean value based assigned weight.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/reset_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset parameters.yaml — reset_params","title":"Reset parameters.yaml — reset_params","text":"Resets values parameters.yaml file default initial values.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/reset_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset parameters.yaml — reset_params","text":"","code":"reset_params()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/reset_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset parameters.yaml — reset_params","text":"","code":"if (FALSE) { reset_params() }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/reso.html","id":null,"dir":"Reference","previous_headings":"","what":"Get resolution value — reso","title":"Get resolution value — reso","text":"Resolution stored parameter.yaml. present result default value.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/reso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get resolution value — reso","text":"","code":"reso()"},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Run senstivity analysis — sa_onrasters","title":"Run senstivity analysis — sa_onrasters","text":"sensitivity_analysis() takes raster object parameters input.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run senstivity analysis — sa_onrasters","text":"","code":"sa_onrasters(   rast,   global = TRUE,   geoscale,   link_thresholds,   host_density_thresholds,   agg_methods = c(\"sum\", \"mean\"),   dist_method = \"geodesic\",   res = reso(),   maps = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run senstivity analysis — sa_onrasters","text":"rast Raster object used analysis. global Logical. TRUE global analysis, FALSE otherwise. Default TRUE geoscale Vector. Geographical coordinates form c(Xmin, Xmax, Ymin, Ymax) link_thresholds vector. link threshold values host_density_thresholds vector. host density threshold values agg_methods vector. Aggregation methods dist_method character. One values dist_methods() res numeric. resolution operations run. Default reso() maps logical. TRUE maps plotted, FALSE otherwise outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run senstivity analysis — sa_onrasters","text":"list calculated CCRI indices operations. index generated combination paramters. One combination equivalent sean() function.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run senstivity analysis — sa_onrasters","text":"global = TRUE, geo_scale ignored. Instead uses scales global_scales().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run senstivity analysis — sa_onrasters","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland Connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, \\@urlhttps://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sa_onrasters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run senstivity analysis — sa_onrasters","text":"","code":"# \\donttest{ rr <- get_rasters(list(monfreda = c(\"avocado\"))) res1 <- sa_onrasters(rr[[1]],             global = FALSE,             geoscale = c(-115, -75, 5, 32),             c(0.0001, 0.00004),             c(0.0001, 0.00005),             c(\"sum\", \"mean\"),             res = 24) res2 <- sa_onrasters(rr[[1]],             global = TRUE,             link_thresholds = c(0.000001),             host_density_thresholds = c(0.00015),             agg_methods = c(\"sum\"),             res = 24) # }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Only meant to global variables — scales","title":"Only meant to global variables — scales","text":"meant global variables","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only meant to global variables — scales","text":"","code":"scales"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/scales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Only meant to global variables — scales","text":"object class environment length 2.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sensitivity analysis on cropland harvested area fraction — sean","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"function calculates sensitivity analysis cropland harvested area fraction based provided parameters. parameters accessible paramters.yaml uses value ","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"","code":"sean(   rast,   global = TRUE,   geoscale,   agg_methods = c(\"sum\", \"mean\"),   dist_method = \"geodesic\",   link_threshold = 0,   host_density_threshold = 0,   res = reso(),   maps = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"rast Raster object used analysis. global Logical. TRUE global analysis, FALSE otherwise. Default TRUE geoscale Vector. Geographical coordinates form c(Xmin, Xmax, Ymin, Ymax) agg_methods vector. Aggregation methods dist_method character. One values dist_methods() link_threshold numeric. threshold value link host_density_threshold host density threshold value res numeric. resolution operations run. Default reso() maps logical. TRUE maps plotted, FALSE otherwise outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"list calculated CCRI values using negative exponential","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"global = TRUE, geoscale ignored global_scales() used","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland Connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, \\@urlhttps://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate sensitivity analysis on cropland harvested area fraction — sean","text":"","code":"# \\donttest{ avocado <- cropharvest_rast(\"avocado\", \"monfreda\") risk_indexes <- sean(avocado) # }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/search_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for crop — search_crop","title":"Search for crop — search_crop","text":"returns dataset sources crop data available. wrapper around geodata::spamCrops() geodata::monfredaCrops()","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/search_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for crop — search_crop","text":"","code":"search_crop(name)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/search_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for crop — search_crop","text":"name name crop","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/search_crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for crop — search_crop","text":"","code":"search_crop(\"coffee\") search_crop(\"wheat\") # \\donttest{ search_crop(\"jackfruit\") # }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sensitivity analysis on parameters — sensitivity_analysis","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"function runs sensitivity analysis parameters based parameters provided set_parameters(). can used entry point CCRI. default, runs analysis global sclaesglobal_scales(). analysis complete, suppress maps outcomes maps = FALSE interactive() FALSE.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"","code":"sensitivity_analysis(maps = TRUE, alert = TRUE)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"maps logical. TRUE maps plotted, FALSE otherwise alert logical. TRUE beep sound played, FALSE otherwise","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"logical. TRUE analysis completed, FALSE otherwise. Errors handled.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland Connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, \\@urlhttps://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sensitivity_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate sensitivity analysis on parameters — sensitivity_analysis","text":"","code":"# \\donttest{ # Run analysis on specified parameters.yaml sensitivity_analysis() sensitivity_analysis(FALSE, FALSE) sensitivity_analysis(TRUE, FALSE) # }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_global_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Set global geographical extent — set_global_scales","title":"Set global geographical extent — set_global_scales","text":"Set geographical extents used global analysis. extent form c(Xmin, Xmax, Ymin, Ymax)","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_global_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set global geographical extent — set_global_scales","text":"","code":"set_global_scales(value)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_global_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set global geographical extent — set_global_scales","text":"value list. Named list eastern western hemisphere extents. See usage.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_global_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set global geographical extent — set_global_scales","text":"","code":"if (FALSE) { set_global_scales(list(east = c(-24, 180, -58, 60), west = c(-140, -34, -58, 60))) }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Parameters — set_parameters","title":"Set Parameters — set_parameters","text":"function allows set parameters replacing existing parameters file new one. Use get_parameters() modify parameter values.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Parameters — set_parameters","text":"","code":"set_parameters(new_params, iwindow = FALSE)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Parameters — set_parameters","text":"new_params path new parameters file. iwindow Logical indicating whether prompt user select new parameters file using file selection window. Defaults FALSE.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Parameters — set_parameters","text":"None","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Parameters — set_parameters","text":"","code":"param_fp <- get_parameters() set_parameters(param_fp)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_reso.html","id":null,"dir":"Reference","previous_headings":"","what":"Set resolution value — set_reso","title":"Set resolution value — set_reso","text":"Set resolution used analysis. modify parameters.yaml instead currently loaded instance . Must greater 0 less equal 48.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_reso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set resolution value — set_reso","text":"","code":"set_reso(value)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_reso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set resolution value — set_reso","text":"value numeric. Resolution value.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/set_reso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set resolution value — set_reso","text":"","code":"if (FALSE) { set_reso(24) }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"raster for mapspam crop. — sp_rast","title":"raster for mapspam crop. — sp_rast","text":"get raster crop mapspam dataset","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"raster for mapspam crop. — sp_rast","text":"","code":"sp_rast(crp)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"raster for mapspam crop. — sp_rast","text":"crp character. name crop. Case-insensitive.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"raster for mapspam crop. — sp_rast","text":"spatRaster","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"raster for mapspam crop. — sp_rast","text":"See geodata::spamCrops() supported crops.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"raster for mapspam crop. — sp_rast","text":"International Food Policy Research Institute, 2020. Spatially-Disaggregated Crop Production Statistics Data Africa South Sahara 2017. <doi: 10.7910/DVN/FSSKBW>, Harvard Dataverse, V2","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/sp_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"raster for mapspam crop. — sp_rast","text":"","code":"if (FALSE) { sp_rast(\"rice\") }"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/supported_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns metrics currently supported in the analysis. — supported_metrics","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"Returns metrics currently supported analysis.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/supported_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"","code":"supported_metrics()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/supported_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"vector supported metrics.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/supported_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"","code":"supported_metrics()"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/the.html","id":null,"dir":"Reference","previous_headings":"","what":"Only meant to global variables — the","title":"Only meant to global variables — the","text":"meant global variables","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/the.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only meant to global variables — the","text":"","code":"the"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/the.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Only meant to global variables — the","text":"object class environment length 7.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/tiff_torast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster object from tif file — tiff_torast","title":"Get raster object from tif file — tiff_torast","text":"wrapper terra::rast() generates raster object provided TIF file.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/tiff_torast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster object from tif file — tiff_torast","text":"","code":"tiff_torast(path_to_tif)"},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/tiff_torast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raster object from tif file — tiff_torast","text":"path_to_tif TIF file","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/tiff_torast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raster object from tif file — tiff_torast","text":"SpatRaster.","code":""},{"path":"https://garrettlab.github.io/CroplandConnectivity/reference/tiff_torast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raster object from tif file — tiff_torast","text":"","code":"if (FALSE) { # Generate raster for usage fp <- .get_helper_filepath(\"avocado\") tiff_torast(fp) tiff_torast(\"avocado_HarvestedAreaFraction.tif\")  }"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://garrettlab.github.io/CroplandConnectivity/news/index.html","id":"geohabnet-0009000","dir":"Changelog","previous_headings":"","what":"geohabnet 0.0.0.9000","title":"geohabnet 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
