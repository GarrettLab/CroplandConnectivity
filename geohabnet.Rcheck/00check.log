* using log directory ‘/Users/kkeshav/Desktop/UFL/OPS/garrettLab/CC/geohabnet.Rcheck’
* using R version 4.2.3 (2023-03-15)
* using platform: aarch64-apple-darwin20 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘geohabnet/DESCRIPTION’ ... OK
* this is package ‘geohabnet’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘geohabnet’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
Namespace in Imports field not imported from: ‘utils’
  All declared Imports should be used.
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘STR_BETWEENNESS’ ‘STR_EIGEN_VECTOR_CENTRALITY’
  ‘STR_NEAREST_NEIGHBORS_SUM’ ‘STR_NODE_STRENGTH’ ‘calculate_ccri’
  ‘calculate_difference_map’ ‘calculate_metrics_weight’
  ‘calculate_zero_raster’ ‘ccri_neg_exponential_function’
  ‘ccri_negative_exponential’ ‘ccri_powerlaw’ ‘ccri_powerlaw_function’
  ‘ccri_variance’ ‘check_metrics’ ‘get_cropharvest_raster’
  ‘get_cropharvest_raster_sum’ ‘get_geographic_scales’
  ‘global_analysis’ ‘initialize_cropland_data’ ‘is_initialized’
  ‘paldif’ ‘palette1’ ‘sensitivity_analysis_on_cropland_threshold’
  ‘sensitivity_analysis_on_geoextent_scale’
  ‘sensitivity_analysis_on_link_weight’ ‘senstivity_analysis’
  ‘validate_index_cal’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ... ERROR
Running examples in ‘geohabnet-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: load_parameters
> ### Title: Load Parameters from YAML File
> ### Aliases: load_parameters
> 
> ### ** Examples
> 
> # Load parameters from default file
> load_parameters()
$`CCRI parameters`
$`CCRI parameters`$DispersalParameterBeta
$`CCRI parameters`$DispersalParameterBeta[[1]]
[1] 0.5

$`CCRI parameters`$DispersalParameterBeta[[2]]
[1] 1

$`CCRI parameters`$DispersalParameterBeta[[3]]
[1] 1.5


$`CCRI parameters`$DispersalParameterGamma
$`CCRI parameters`$DispersalParameterGamma[[1]]
[1] 0.05

$`CCRI parameters`$DispersalParameterGamma[[2]]
[1] 1

$`CCRI parameters`$DispersalParameterGamma[[3]]
[1] 0.2

$`CCRI parameters`$DispersalParameterGamma[[4]]
[1] 0.3

$`CCRI parameters`$DispersalParameterGamma[[5]]
[1] 1


$`CCRI parameters`$LinkThreshold
$`CCRI parameters`$LinkThreshold[[1]]
[1] 0

$`CCRI parameters`$LinkThreshold[[2]]
[1] 1e-06

$`CCRI parameters`$LinkThreshold[[3]]
[1] 6e-04


$`CCRI parameters`$Longitude_Latitude
$`CCRI parameters`$Longitude_Latitude$CustomExt
$`CCRI parameters`$Longitude_Latitude$CustomExt[[1]]
[1] -115  -75    5   32


$`CCRI parameters`$Longitude_Latitude$Global
[1] FALSE

$`CCRI parameters`$Longitude_Latitude$WestExt
[1] -24 180 -58  60

$`CCRI parameters`$Longitude_Latitude$EastExt
[1] -140  -34  -58   60


$`CCRI parameters`$NetworkMetrics
$`CCRI parameters`$NetworkMetrics$InversePowerLaw
[1] "betweeness"               "node_strength"           
[3] "sum_of_nearest_neighbors" "eigenvector_centrality"  

$`CCRI parameters`$NetworkMetrics$NegativeExponential
[1] "betweeness"               "node_strength"           
[3] "sum_of_nearest_neighbors" "eigenvector_centrality"  


$`CCRI parameters`$PriorityMaps
$`CCRI parameters`$PriorityMaps$MeanCC
[1] TRUE

$`CCRI parameters`$PriorityMaps$Difference
[1] TRUE

$`CCRI parameters`$PriorityMaps$Variance
[1] FALSE


$`CCRI parameters`$SaveOutcomes
$`CCRI parameters`$SaveOutcomes$MeanCC
[1] FALSE

$`CCRI parameters`$SaveOutcomes$Difference
[1] TRUE

$`CCRI parameters`$SaveOutcomes$Variance
[1] TRUE


$`CCRI parameters`$AggregationStrategy
[1] "sum"  "mean"

$`CCRI parameters`$Hosts
[1] "avocado"

$`CCRI parameters`$HostDensityThreshold
[1] 0.0015 0.0020 0.0025

$`CCRI parameters`$Resolution
[1] 24


attr(,"config")
[1] "default"
attr(,"file")
[1] "/Users/kkeshav/Desktop/UFL/OPS/garrettLab/CC/geohabnet.Rcheck/geohabnet/parameters.yaml"
> 
> # Load parameters from custom file
> load_parameters("custom_parameters.yaml")
Error in config::get(file = filepath) : 
  Config file custom_parameters.yaml not found in current working directory or parent directories
Calls: load_parameters -> <Anonymous>
Execution halted
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... ERROR
  Running ‘testthat.R’
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
  Error in `geohabnet::senstivity_analysis()`: object 'parameters_config' not found
  Backtrace:
      ▆
   1. ├─testthat::expect_no_condition(...) at test-functional.R:8:2
   2. │ └─testthat:::expect_no_(...)
   3. │   └─testthat:::quasi_capture(enquo(object), NULL, capture)
   4. │     ├─testthat (local) .capture(...)
   5. │     │ └─rlang::try_fetch(...)
   6. │     │   └─base::withCallingHandlers(...)
   7. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
   8. └─geohabnet::senstivity_analysis()
  
  [ FAIL 1 | WARN 0 | SKIP 0 | PASS 20 ]
  Error: Test failures
  Execution halted
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 2 ERRORs, 1 WARNING, 1 NOTE
